#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <locale.h>
#define MAX_FUNC 50

using namespace std;

typedef struct{  // Estrutura

	char nome[50], sexo[10];
	float horas_trab, val_hora, sal_bruto=horas_trab*val_hora, saliq; //Horas trabalhadas, valor da hora trabalhada, salário bruto, salário líquido
	int idade, cpf, ativo;

}funcionario; //Nome do registro

funcionario func[MAX_FUNC]; //Limite do registro

int total = 0; char arq_name[15]; //Váriaveis globais

 //Funções
void menu(); //Menu principal
void cadastrar();//Função cadastrar
void pesquisar();//Pesquisa de funcionários pel CPF
void menu_lista();//Sub menu de listagem
void tds_func();//Listagem de todos os funcionários
void saliq();//Função para calcular o salário liquido
void sal_inf_500();//Listagem de todos os funcionários com salário inferior a 500R$
void sal_inf_1k();//Listagem de todos os funcionários com salário inferior a 1000R$
void sal_sup_4k();//Listagem de todos os funcionários com salário superior a 4000R$
void sal_sup_igual_5k();//Listagem de todos os funcionários com salário superior ou igual a 5000R$
void sal_sup_igual_7k();//Listagem de todos os funcionários com salário superior ou igual a 7000R$
void sal_sup_igual_10k();//Listagem de todos os funcionários com salário superior ou igual a 10.000R$
void menu_arq();//Sub menu para manipulação de arquivos externos
void save_arq();//Salvar arquivos externos
void upload_arq();//Carregar arquivo externo;

main(){  //Programa principal  
	
	setlocale(LC_ALL, "Portuguese"); //Permitir caracteres usados na língua portuguesa
		
	menu();
		
	return 0;
}

void menu(){ //Estrutura do menu

	int op; //Variável de operação
	
	do{
		system("cls");
		cout<<"Armazenamento de Funcionários"<<endl;
		cout<<endl<<"1 - Cadastrar Funcionário"<<endl;
		cout<<"2 - Pesquisar Funcionário"<<endl;
		cout<<"3 - Listar Funcionários"<<endl;
		cout<<"4 - Salvar/Carregar arquivo externo"<<endl;
		
		cout<<"0 - Encerrar o Programa"<<endl<<endl;
		cout<<"Comando: "; cin>>op;
		getchar();
		
		switch(op){
			case 1:
				cadastrar();
			break;
				
			case 2:
				pesquisar();
			break;
				
			case 3:
				menu_lista();
			break;
			
			case 4:
				menu_arq();
			break;
			
			case 0:
				exit(0);
			break;
			
			default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
			break;
		}
		getchar();
	}while(op!=0);
}

void cadastrar(){ //Estrutura do cadastro

	system("cls");
     //Variáveis do registro
	char nome[50], sexo[10];
	float horas_trab, val_hora, sal_bruto, saliq;
    int cpf, idade, ativo, op;
	
	do{
		cout<<endl<<"---Cadastro de Funcionário---"<<endl;
		cout<<endl<<"Nome: ";	gets(nome); 
		cout<<endl<<"CPF: ";	cin>>cpf;
		cout<<endl<<"Idade: ";	cin>>idade;
		cout<<endl<<"Sexo: ";	cin>>sexo;
		cout<<endl<<"Horas trabalhadas: ";	cin>>horas_trab;
		cout<<endl<<"Valor da hora trabalhada: ";	cin>>val_hora;
		
		sal_bruto=horas_trab*val_hora;

		for(int i=0;i<MAX_FUNC; i++){    //Salvando os dados no registro
			if(func[i].ativo==0){
				func[i].horas_trab = horas_trab;
				func[i].val_hora = val_hora;
				func[i].sal_bruto = sal_bruto;
				func[i].cpf = cpf;
				func[i].idade = idade;
				strcpy(func[i].nome, nome);
				strcpy(func[i].sexo, sexo);
				func[i].ativo=1;
				total ++;
				break;
			}
		}
		cout<<endl<<"Parabéns! Funcionário cadastrado com sucesso!"<<endl;
		cout<<endl<<"1 - Cadastrar novo funcionário"<<endl;
		cout<<"0 - Menu Principal"<<endl; 
		cout<<endl<<"Comando: ";	cin>>op;
		getchar();
		
		switch(op){
			case 0:
				menu();
			break;
			
			case 1:
				cadastrar();
			break;
			
			default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
			break;
		}
	}while(op!=0 && total<MAX_FUNC);
	getchar();
}

void menu_arq(){//Sub menu de arquivos
	int op;
	
	system("cls");
	
	cout<<endl<<"SALVAR/CARREGAR UM ARQUIVO EXTERNO"<<endl;
	cout<<"---------------------------------------"<<endl;
	cout<<"Lembre-se de salvar ao fim da execução"<<endl; 
	cout<<"---------------------------------------"<<endl;
	
	cout<<endl<<"1 - Salvar arquivo"<<endl;
	cout<<"2 - Carregar arquivo"<<endl;
	cout<<"0 - Menu principal"<<endl;
	cout<<endl<<"Comando: ";	cin>>op;
	getchar();
	
	switch(op){
		
		case 1:
			save_arq();
		break;
		
		case 2:
			upload_arq();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
        break;
	}	
}

void save_arq(){//Estrutura para salvar arquivos externos


	saliq();
	
	FILE* arq;
	
	cout<<endl<<"Digite um nome para o arquivo: "; cin>>arq_name; strcat(arq_name,".txt");
	if((arq=fopen(arq_name,"w"))==NULL){
		cout<<endl<<"não foi possível abrir o arquivo"<<endl;
	}else{
	
	fprintf (arq,"Total= %d\n",total);
	
	for(int i=0;i<total;i++){
		
		fprintf (arq, "\nNome= %s",func[i].nome);
		fprintf (arq, "\nCPF= %d",func[i].cpf);	
		fprintf (arq, "\nSexo= %s",func[i].sexo);
		fprintf (arq, "\nIdade= %d",func[i].idade);
		fprintf (arq, "\nHoras Trabalhadas= %.1f",func[i].horas_trab);
		fprintf (arq, "\nValor da hora trabalhada= %.1f",func[i].val_hora);
		fprintf (arq, "\nSalário Líquido= %.1f",func[i].saliq);
	}
	cout<<endl<<"Arquivo criado com sucesso!"<<endl; fclose(arq);
	cout<<"Você será redirecionado ao menu principal"<<endl;
    cout<<" "<<endl;
    system("pause");
	
}
}

void upload_arq(){//Estrutura para carregar arquivos externos
	
FILE *arq;
   
	cout<<endl<<"-----------------------------------------------------------------------"<<endl;
	cout<<"O arquivo que será carregado deve estar no mesmo diretório do sistema"<<endl; 
	cout<<"-----------------------------------------------------------------------"<<endl;
	cout<<"Lembre-se de adicionar a extensão '.txt' junto do nome do programa"<<endl; 
	cout<<"-----------------------------------------------------------------------"<<endl;
   
   cout<<endl<<"Digite o nome do arquivo: "; cin>>arq_name;
   arq = fopen(arq_name,"r");
   if (arq == NULL){
   	cout<<endl<<"não foi possível carregar o arquivo"<<endl;
   }else{
   	    fseek (arq,7,0);
		fscanf (arq, "%d\n", &total);
		
	for(int i=0;i<total;i++){
	for(int i=0;i<total;i++){
		fseek(arq,6,1); fscanf(arq,"%s\n",func[i].nome);
		fseek(arq,11,1); fscanf(arq,"%d\n",&func[i].cpf);
		fseek(arq,6,1); fscanf(arq,"%s\n",func[i].sexo);
		fseek(arq,7,1); fscanf(arq,"%d\n",&func[i].idade);
		fseek(arq,5,1); fscanf(arq,"%f\n",&func[i].horas_trab);
		fseek(arq,5,1); fscanf(arq,"%f\n",&func[i].val_hora);
		fseek(arq,7,1); fscanf(arq,"%f\n",&func[i].saliq);
		}
	
   
}
}

fclose(arq);
    
	cout<<endl<<"Arquivo carregado com sucesso!"<<endl;
	cout<<endl<<"Você será redirecionado ao menu principal"<<endl;
    cout<<" "<<endl;
    	system("pause");
	
}

void saliq(){//Estrutura lógica do sistema de salário baseado na implementação do teto da alíquota do INSS

	int op, ZERO;

	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].sal_bruto<=1751.81){
			func[i].saliq=func[i].sal_bruto*.92;
		}
		else if(func[i].sal_bruto>=1751.82 && func[i].sal_bruto<=2919.72){
			func[i].saliq=func[i].sal_bruto*.91;	
		}
		else if(func[i].sal_bruto>=2919.73 && func[i].sal_bruto<=5839.45){
			func[i].saliq=func[i].sal_bruto*.89;
		}
		else if(func[i].sal_bruto>5839.45){					//implementação do teto da alíquota do INSS
			func[i].saliq=func[i].sal_bruto*.86;
		}
	}
}

void sal_inf_500(){//Estrutura de exibição dos funcionários com salário inferior a 500R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq<500 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}
	
	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
			break;
	}
}

void sal_inf_1k(){//Estrutura de exibição dos funcionários com salário inferior a 1000R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq<1000 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}

	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
			break;
	}
}

void sal_sup_4k(){//Estrutura de exibição dos funcionários com salário superior a 4000R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq>4000 && func[i].saliq<5000 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}


	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
			break;
	}
}

void sal_sup_igual_5k(){ //Estrutura de exibição dos funcionários com salário superior ou igual a 5000R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq>=5000 && func[i].saliq<7000 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}

	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido! "<<endl;
			system("pause");
			menu();
			break;
	}
}
	
void sal_sup_igual_7k(){//Estrutura de exibição dos funcionários com salário superior ou igual a 7000R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq>=7000 && func[i].saliq<10000 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}

	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido"<<endl;
			system("pause");
			menu();
			break;
	}
}

void sal_sup_igual_10k(){//Estrutura de exibição dos funcionários com salário superior ou igual a 10.000R$
	int op;

	system("cls");
	saliq();
	
	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].saliq>=10000 && func[i].cpf!=0){
			cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}

	cout<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	cout<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
		break;
	}
	
}
	
void pesquisar(){//Estrutura para buscar registros
		
	int cpf, op, local, op1, op2;
	bool cotelli=false;
	saliq();
	
	system ("cls");
	
	cout<<endl<<"***********BUSCA DO FUNCIONÁRIO***********"<<endl;
	cout<<"------------------------------------------------------------"<<endl;
	cout<<"A busca deve ser feito pelo número do CPF do funcionário."<<endl; 
	cout<<"------------------------------------------------------------"<<endl;

	cout<<endl<<"Digite o CPF: "; cin>>cpf;

	if(total==0){
  cout<<endl<<"Sistema vazio"<<endl;
  
  cout<<endl<<"Gostaria de cadastrar um novo funcionário?"<<endl;
  cout<<endl<<"1 - Cadastrar novo funcionário"<<endl;
  cout<<"0 - Menu Principal"<<endl;
  
  cout<<endl<<"Comando: "; cin>>op1;
  switch(op1){
  	case 1:
  		cadastrar();
  	break;
  	
  	case 0:
  		menu();
  	break;
  	
}
  
  
}else{


for(int i=0;i<MAX_FUNC;i++){
	if(cpf==func[i].cpf){
		local=i;
		cotelli=true;
	}
}

for(int i=0;i<MAX_FUNC;i++){
	if (cotelli == true && cpf==func[i].cpf) {
		
cout<<"-------------------------------"<<endl;
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
cout<<endl<<"-------------------------------"<<endl<<endl;
			
   cout<<"1 - Nova pesquisa"<<endl;
	cout<<"0 - Menu Principal"<<endl;
	cout<<endl<<"Comando: ";	cin>>op;
	getchar();
	
	switch(op){
		
		case 1:
			pesquisar();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido!"<<endl;
			system("pause");
			menu();
        break;
}	

} else if (cotelli==false){
	cout<<endl<<"Funcionário não encontrado"<<endl;

cout<<endl<<"Gostaria de cadastra-lo?"<<endl;
			cout<<endl<<"1 - Sim"<<endl;
			cout<<"0 - Não"<<endl;
			
			cout<<endl<<"Comando: "; cin>>op1;
			getchar();
			switch(op1){
				case 1:
					cadastrar();
				break;
				
				case 0:
					cout<<endl<<"Gostaria de continuar pesquisando?"<<endl;
					cout<<endl<<"1 - Nova pesquisa"<<endl;
			        cout<<"0 - Retornar ao menu principal"<<endl;
			        cout<<endl<<"Comando: "; cin>>op2;
			        getchar();
			switch(op2){
				case 1:
					pesquisar();
			    break;
			    
			    case 0:
			    	menu();
			    break;
}
					
}

}
}
}
}

void menu_lista(){ //Menu de listagem
	
	int op_;
	
	do{
		system("cls");
		cout<<endl<<"*******SITUAÇÃO DOS FUNCIONÁRIOS CADASTRADOS********"<<endl;
		cout<<"----------------------------------------------------"<<endl;
	   	cout<<"1 - Todos os Funcionários"<<endl;	
		cout<<"2 - Funcionários com salário inferior a R$500"<<endl;
		cout<<"3 - Funcionários com salário inferior a R$1000"<<endl;
		cout<<"4 - Funcionários com salário superior a R$4000"<<endl;
		cout<<"5 - Funcionários com salário superior ou igual a R$5000"<<endl;
		cout<<"6 - Funcionários com salário superior ou igual a R$7000"<<endl;
		cout<<"7 - Funcionários com salário superior ou igual a R$10 000"<<endl;
	
		cout<<"0 - Sair"<<endl<<endl;
		cout<<"Comando: "; cin>>op_;
		getchar();
		switch(op_){
			case 1:
			   tds_func();
			break;
			
			case 2:
				sal_inf_500();
			break;
			
			case 3:
				sal_inf_1k();
			break;
			
			case 4:
		         sal_sup_4k();
		    break;
		    
		    case 5:
		    	sal_sup_igual_5k();
		    break;
		    
		    case 6:
		    	sal_sup_igual_7k();
		    break;
		    
		    case 7:
		    	sal_sup_igual_10k();
		    break;
		    
			case 0:
				menu();
			break;
			
			default:
			cout<<endl<<"Error! Comando inválido"<<endl;
			system("pause");
			menu();
			break;
		}
	}while(op_!=0);

}

void tds_func(){ //Estrutura de exibição de todos os funcionários
	
	int op;
	
	system("cls");
	saliq();
	
	cout<<endl<<"***********LISTA DE FUNCIONÁRIOS CADASTRADOS***********"<<endl;
	cout<<"-------------------------------"<<endl;
    cout<<"Total de funcionários: "<<total<<endl;
    cout<<"-------------------------------"<<endl;

	for(int i=0;i<MAX_FUNC;i++){
		if(func[i].ativo==1){
			cout<<"Nome: "<<func[i].nome<<endl;
			cout<<"CPF: "<<func[i].cpf<<endl;
			cout<<"Sexo: "<<func[i].sexo<<endl;
			cout<<"Idade: "<<func[i].idade<<endl;
			cout<<"Horas trabalhadas: "<<func[i].horas_trab<<endl;
			cout<<"Valor da hora trabalhada: R$"<<func[i].val_hora<<endl;
			cout<<"Salário: R$"<<func[i].saliq<<endl;
			cout<<endl<<"-------------------------------"<<endl<<endl;
		}
	}
	
	cout<<endl<<"1 - Menu de listagem"<<endl;
	cout<<"0 - Menu principal"<<endl;
	
	
	cout<<endl<<"Comando: "; cin>>op; 
	
	switch(op){
		case 1:
			menu_lista();
		break;
		
		case 0:
			menu();
		break;
		
		default:
			cout<<endl<<"Error! Comando inválido"<<endl;
			system("pause");
			menu();
		break;
	}
}
